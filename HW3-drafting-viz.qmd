---
title: "HW3-drafting-viz"
format: html
editor: visual
---

## Homework 3

## Questions

1.  Which Option I plan to use?
    1.  I plan to use option 2 in regard to building a cohesive infographic-style visualization.
2.  Restate your question(s). Has this changed at all since HW #1? If yes, how so?
    1.  Do vineyards affect bee species?
    2.  Does **differing vineyard types due to their differing levels of management reflect bee behavior?**
    3.  Do these different vineyard types have different bee species that are most common?
    4.  Where in the world does this dataset connect to?
3.  Explain which variables from your data set(s) you will use to answer your question(s).
4.  In HW #2, you should have created some exploratory data viz to better understand your data. You may already have some ideas of how you plan to formally visualize your data, but it's *incredibly* helpful to look at visualizations by other creators for inspiration. Find at least two data visualizations that you could (potentially) borrow / adapt pieces from. Link to them or download and embed them into your `.qmd` file, and explain which elements you might borrow (e.g. the graphic form, legend design, layout, etc.).
    1.  https://www.cedricscherer.com/top/dataviz/
        1.  I really like how this infographic highlights the theme of the question aiming to be answered. The theme and colors automatically makes me think of bees and allows the reader to use context clues in discerning the aim of the data.
5.  Hand-draw your anticipated three visualizations (option 1) or infographic (option 2). Take a photo of your drawing and embed it in your rendered `.qmd` file -- **note** that these are not *exploratory* visualizations, but rather your plan for your final visualizations that you will eventually polish and submit with HW #4.
6.  Mock up your visualizations using code. We understand that you will continue to iterate on these into HW #4 (particularly after receiving feedback), but by the end of HW #3, you should:
    -   have your data plotted (if you're experimenting with an advanced graphic form(s) that were not explicitly covered in class, we understand that this may take some more time to build; you should have as much put together as possible)

    -   use appropriate strategies to highlight / focus attention on a clear message

    -   include appropriate text such as titles, captions, axis labels

    -   experiment with colors and typefaces / fonts

    -   create a presentable / aesthetically-pleasing theme (e.g. (re)move gridlines / legends as appropriate, adjust font sizes, etc.)
7.  What challenges did you encounter or anticipate encountering as you continue to build / iterate on your visualizations in R?
8.  What ggplot extension tools / packages do you need to use to build your visualizations? Are there any that we haven't covered in class that you'll be learning how to use for your visualizations?
9.  What feedback do you need from the instructional team and / or your peers to ensure that your intended message is clear?

https://www.eea.europa.eu/data-and-maps/data/eea-reference-grids-2/gis-files/germany-shapefile

https://download.geofabrik.de/europe/germany.html

https://www.diva-gis.org/gdata

## Map Visualization

```{r}
#..........................load packages.........................
library(tidyverse)
library(chron)
library(naniar)
library(here)
library(janitor)
library(ggridges)
library(sf)
library(ggplot2)
library(ggspatial)


# read in data
germany_outline <- st_read(here::here("data", "DEU_adm", "DEU_adm0.shp"))

germany_regions <- st_read(here::here("data", "DEU_adm", "DEU_adm1.shp"))

rhine <- germany_regions |> 
  filter(NAME_1 == "Rheinland-Pfalz")
```

```{r}
germany_map <- ggplot() +
  geom_sf(data = germany_outline, color = "pink", fill = "pink") +
  geom_sf(data = germany_regions, color = "blue") +
  geom_sf(data = rhine, color = "green")


germany_map
```

## Boxplot Visualization

```{r}
#..........................load packages.........................
library(tidyverse)
library(chron)
library(naniar)
library(here)
library(janitor)
library(ggridges)

# read in data
# use read_csv2() for files with a separator of ;
bees <- read_csv2(here::here("data", "doi_10_5061_dryad_h44j0zpq0__v20221222", "Wersebeckmann_et_al_wildbee_species_matrix_allSR.csv"))

bees_clean <- bees |> 
  
  # apply lower snake case to all column names
  clean_names() |> 
  
  # coerce data type of site from character to factor
  mutate(vineyard_type = as.factor(vineyard_type)) |> 
  
  # select only columns of interest
  select(vineyard_type, ground_nesting_spec_nr, above_ground_spec_nr, spec_nr) |> 
  
  # turn nesting behavior and counts from 2 separate columns to a variable 
  pivot_longer(cols = c(ground_nesting_spec_nr, above_ground_spec_nr), names_to = "nesting_behavior", values_to = "count") |> 
  
  # group by recorded nesting behavior for easier summarization
  group_by(nesting_behavior)

# violin plot
ggplot(bees_clean, aes(x = vineyard_type, y = count, color = nesting_behavior))+
  geom_violin()
```

## Circular Barchart Visualization

```{r}
#..........................load packages.........................
library(tidyverse)
library(chron)
library(naniar)
library(here)
library(janitor)
library(ggridges)

# read in data
# use read_csv2() for files with a separator of ;
bees <- read_csv2(here::here("data", "doi_10_5061_dryad_h44j0zpq0__v20221222", "Wersebeckmann_et_al_wildbee_species_matrix_allSR.csv"))

bees_species <- bees |> 
  
  # coerce data type of site from character to factor
  mutate(VineyardType = as.factor(VineyardType)) |> 
  
  select(-c(SamplingRound, Block, Winegrower, SpecNr, Ind, GroundNestingSpecNr, GroundNestingInd, AboveGroundSpecNr, AboveGroundInd, RlSpecNr, RlInd)) |> 
  
  pivot_longer(!c(Site_ID, VineyardType), names_to = "species", values_to = "counts")
```
